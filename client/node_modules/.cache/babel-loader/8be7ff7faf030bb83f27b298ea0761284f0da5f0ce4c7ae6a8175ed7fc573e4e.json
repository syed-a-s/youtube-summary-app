{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nconst useFetch = endpoint => {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  // const abortControllerRef = useRef<AbortController | null>(null);\n  const abortControllerRef = useRef(null);\n  const fetchData = async () => {\n    var _abortControllerRef$c;\n    (_abortControllerRef$c = abortControllerRef.current) === null || _abortControllerRef$c === void 0 ? void 0 : _abortControllerRef$c.abort(); // abort request if request already exists\n    abortControllerRef.current = new AbortController();\n    try {\n      var _abortControllerRef$c2;\n      setIsLoading(true);\n      const response = await fetch(endpoint, {\n        // fetch(`http://127.0.0.1:5000/${endpoint}`, {\n        signal: (_abortControllerRef$c2 = abortControllerRef.current) === null || _abortControllerRef$c2 === void 0 ? void 0 : _abortControllerRef$c2.signal\n      }); // will enable us on next request to abort the request if needed \n      const data = await response.json();\n      setData(data);\n    } catch (error) {\n      if (error.name === \"AbortError\") {\n        console.log(\"Aborted\");\n        return;\n      } // cancel error if error was caused by aborting previous request \n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n    ;\n  };\n  useEffect(() => {\n    fetchData();\n  }, [endpoint]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n_s(useFetch, \"2hI+6CGVwlKkFPxzV//rxsiAS08=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useRef","useFetch","endpoint","_s","data","setData","isLoading","setIsLoading","error","setError","abortControllerRef","fetchData","_abortControllerRef$c","current","abort","AbortController","_abortControllerRef$c2","response","fetch","signal","json","name","console","log"],"sources":["/home/nahin/Desktop/repos/youtube-summary-app/client/src/hook/useFetch.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nconst useFetch = (endpoint) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  // const abortControllerRef = useRef<AbortController | null>(null);\n  const abortControllerRef = useRef(null);\n\n  const fetchData = async () => {\n    abortControllerRef.current?.abort(); // abort request if request already exists\n    abortControllerRef.current = new AbortController();\n\n    try {\n      setIsLoading(true);\n      const response = await fetch(endpoint, { // fetch(`http://127.0.0.1:5000/${endpoint}`, {\n        signal: abortControllerRef.current?.signal,\n      }); // will enable us on next request to abort the request if needed \n      const data = await response.json();\n      setData(data);\n    } catch (error) {\n      if (error.name === \"AbortError\") {\n        console.log(\"Aborted\");\n        return;\n      } // cancel error if error was caused by aborting previous request \n      setError(error);\n    } finally {\n      setIsLoading(false);\n    };\n  };\n\n  useEffect(() => {\n    fetchData(); \n  }, [endpoint]);\n\n  return {data, isLoading, error};\n}\n\nexport default useFetch;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC;;EAEpC;EACA,MAAMY,kBAAkB,GAAGV,MAAM,CAAC,IAAI,CAAC;EAEvC,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,qBAAA;IAC5B,CAAAA,qBAAA,GAAAF,kBAAkB,CAACG,OAAO,cAAAD,qBAAA,uBAA1BA,qBAAA,CAA4BE,KAAK,CAAC,CAAC,CAAC,CAAC;IACrCJ,kBAAkB,CAACG,OAAO,GAAG,IAAIE,eAAe,CAAC,CAAC;IAElD,IAAI;MAAA,IAAAC,sBAAA;MACFT,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAChB,QAAQ,EAAE;QAAE;QACvCiB,MAAM,GAAAH,sBAAA,GAAEN,kBAAkB,CAACG,OAAO,cAAAG,sBAAA,uBAA1BA,sBAAA,CAA4BG;MACtC,CAAC,CAAC,CAAC,CAAC;MACJ,MAAMf,IAAI,GAAG,MAAMa,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCf,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,IAAIA,KAAK,CAACa,IAAI,KAAK,YAAY,EAAE;QAC/BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QACtB;MACF,CAAC,CAAC;MACFd,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,SAAS;MACRD,YAAY,CAAC,KAAK,CAAC;IACrB;IAAC;EACH,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,OAAO;IAACE,IAAI;IAAEE,SAAS;IAAEE;EAAK,CAAC;AACjC,CAAC;AAAAL,EAAA,CAnCKF,QAAQ;AAqCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}