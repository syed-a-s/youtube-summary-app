{"ast":null,"code":"const extractVideoId = youtubeUrl => {\n  // Regular expression to match YouTube video ID\n  const regExp = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\n\n  // Match the regular expression against the URL\n  const match = youtubeUrl.match(regExp);\n\n  // If there is a match, return the video ID, otherwise return null\n  return match ? match[1] : null;\n};\nexport default extractVideoId;","map":{"version":3,"names":["extractVideoId","youtubeUrl","regExp","match"],"sources":["/home/nahin/Desktop/repos/youtube-summary-app/client/src/utils/extractVideoId.js"],"sourcesContent":["const extractVideoId = (youtubeUrl) => {\n  // Regular expression to match YouTube video ID\n  const regExp = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\n  \n  // Match the regular expression against the URL\n  const match = youtubeUrl.match(regExp);\n\n  // If there is a match, return the video ID, otherwise return null\n  return match ? match[1] : null;\n}\n\nexport default extractVideoId;\n"],"mappings":"AAAA,MAAMA,cAAc,GAAIC,UAAU,IAAK;EACrC;EACA,MAAMC,MAAM,GAAG,iIAAiI;;EAEhJ;EACA,MAAMC,KAAK,GAAGF,UAAU,CAACE,KAAK,CAACD,MAAM,CAAC;;EAEtC;EACA,OAAOC,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;AAChC,CAAC;AAED,eAAeH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}