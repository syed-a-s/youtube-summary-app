{"ast":null,"code":"var _jsxFileName = \"/home/nahin/Desktop/repos/youtube-summary-app/client/src/components/CustomComponents/TranscriptComponent/TranscriptComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useFetch from '../../../hook/useFetch.js';\nimport extractVideoId from '../../../utils/extractVideoId.js';\nimport './TranscriptComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranscriptComponent = ({\n  youtubeUrl\n}) => {\n  _s();\n  const videoId = extractVideoId(youtubeUrl);\n  const {\n    data,\n    isLoading,\n    error\n  } = useFetch(videoId);\n  var transcript = '';\n\n  // if(data != null) {\n  //   const transcript = (transcript.transcript || []).map(item => item.text ?? '').join(' ');\n  // } else {\n  //   transcript = 'No transcript yet :)'; \n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: transcript\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TranscriptComponent, \"IR168BCJS/HcsdMDgC0gnKFVMhU=\", false, function () {\n  return [useFetch];\n});\n_c = TranscriptComponent;\nexport default TranscriptComponent;\nvar _c;\n$RefreshReg$(_c, \"TranscriptComponent\");","map":{"version":3,"names":["React","useState","useFetch","extractVideoId","jsxDEV","_jsxDEV","TranscriptComponent","youtubeUrl","_s","videoId","data","isLoading","error","transcript","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nahin/Desktop/repos/youtube-summary-app/client/src/components/CustomComponents/TranscriptComponent/TranscriptComponent.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport useFetch from '../../../hook/useFetch.js';\nimport extractVideoId from '../../../utils/extractVideoId.js';\n\nimport './TranscriptComponent.css';\n\nconst TranscriptComponent = ({youtubeUrl}) => {\n  const videoId = extractVideoId(youtubeUrl);\n  const {data, isLoading, error} = useFetch(videoId);\n  var transcript = '';\n\n  // if(data != null) {\n  //   const transcript = (transcript.transcript || []).map(item => item.text ?? '').join(' ');\n  // } else {\n  //   transcript = 'No transcript yet :)'; \n  // }\n\n  return (\n    <div>\n      {transcript} \n    </div>\n  );\n}\n\nexport default TranscriptComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,cAAc,MAAM,kCAAkC;AAE7D,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,mBAAmB,GAAGA,CAAC;EAACC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,OAAO,GAAGN,cAAc,CAACI,UAAU,CAAC;EAC1C,MAAM;IAACG,IAAI;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGV,QAAQ,CAACO,OAAO,CAAC;EAClD,IAAII,UAAU,GAAG,EAAE;;EAEnB;EACA;EACA;EACA;EACA;;EAEA,oBACER,OAAA;IAAAS,QAAA,EACGD;EAAU;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAAV,EAAA,CAhBKF,mBAAmB;EAAA,QAEUJ,QAAQ;AAAA;AAAAiB,EAAA,GAFrCb,mBAAmB;AAkBzB,eAAeA,mBAAmB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}